# 剑指 Offer 42. 连续子数组的最大和

输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。

要求时间复杂度为O(n)。

```
输入: nums = [-2,1,-3,4,-1,2,1,-5,4]
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
```

每一个数都加前面一个数，这样就形成了连续数组和

如果前面的数是负的（经过上一条，这里面的负，指的就是前面所有的和是负的），就不加（即加个0）

```c++
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int ans = nums[0];
        for(int i = 1;i < nums.size();i++) { 
            nums[i] += max(nums[i-1], 0);
            ans = max(nums[i], ans); 
        }
        return ans;
    }
};
```

